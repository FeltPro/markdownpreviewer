{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["MARKED","require","App","state","markdown","updateMarkdown","this","setState","className","FormGroup","controlId","FormLabel","FormControl","componentClass","placeholder","value","onChange","event","target","dangerouslySetInnerHTML","__html","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAMMA,EAASC,EAAQ,IAEjBC,E,4MAENC,MAAO,CACLC,SAAS,I,EAGXC,eAAiB,SAASD,GACxBE,KAAKC,SAAS,CAACH,c,4CAGf,WAAU,IAAD,OACDA,EAAaE,KAAKH,MAAlBC,SACN,OACE,sBAAKI,UAAU,gBAAf,UACA,8BACE,eAACC,EAAA,EAAD,CAAWC,UAAU,uBAArB,UACE,cAACC,EAAA,EAAD,6BACA,cAACC,EAAA,EAAD,CAAaC,eAAe,WAAWC,YAAY,aAAaC,MAAQX,EAAWY,SAAW,SAACC,GAAD,OAAS,EAAKZ,eAAeY,EAAMC,OAAOH,eAG5I,gCACE,iDACA,qBAAKI,wBAA0B,CAACC,OAAQpB,EAAOI,gB,GAtBrCiB,aA6BHnB,ICzBAoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ad147fc7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport FormGroup from 'react-bootstrap/FormGroup'\nimport FormLabel from 'react-bootstrap/FormLabel'\nimport FormControl from 'react-bootstrap/FormControl'\n\nconst MARKED = require(\"marked\");\n\nclass App extends Component {\n\nstate ={\n  markdown:\"\"\n}\n\nupdateMarkdown = function(markdown){\n  this.setState({markdown});\n}\n\n  render() {\n    let { markdown } = this.state;\n    return (\n      <div className=\"App container\">\n      <div>\n        <FormGroup controlId=\"formControlsTextarea\">\n          <FormLabel>Markdown Input</FormLabel>\n          <FormControl componentClass=\"textarea\" placeholder=\"Enter Text\" value={ markdown } onChange= {(event)=>this.updateMarkdown(event.target.value)}></FormControl>\n        </FormGroup>\n      </div>\n      <div>\n        <h1>Markdown Output</h1>\n        <div dangerouslySetInnerHTML= {{__html: MARKED(markdown)}}></div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}